name: CI

# This is a basic workflow to help you get started with Actions
# Global Variables
env:
  AZUREAPPLICATIONINSIGHTSNAME:   "DemoApplicationInsights2"
  CONTAINERREGISTRYNAME:          "DemoContainerRegistry2"
  CONTAINERREGISTRYNAMELOWER:     "democontainerregistry2"
  KUBERNETESSERVICENAME:          "DemoKubernetesService2"
  AZURELOGANALYTICSWORKSPACENAME: "DemoLogAnalyticsWorkspace2"
  AZURELOADTESTINGNAME:           "DemoAzureLoadTesting2"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build "
  build:
    # The type of runner that the job will run on

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@main

      # Log into Azure
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file Azure Application Insights 
      - name: Deploy Bicep file Azure Application Insights 
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Bicep/AAI/main.bicep
          parameters: name="${{ env.AZUREAPPLICATIONINSIGHTSNAME }}" location="westeurope"
          failOnStdErr: false

      # Deploy Bicep file Container registry
      - name: Deploy Bicep file Container registry
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Bicep/ACR/main.bicep
          parameters: name="${{ env.CONTAINERREGISTRYNAME }}"
          failOnStdErr: false

      # Build and push image 
      - name: 'Build and push image'
        run: |
          az acr login --name "${{ env.CONTAINERREGISTRYNAMELOWER }}"
          docker build src/helloworld-service/HelloWorld.API/ -t ${{ env.CONTAINERREGISTRYNAMELOWER }}.azurecr.io/demoperformanceapp:${{ github.sha }}
          docker push ${{ env.CONTAINERREGISTRYNAMELOWER }}.azurecr.io/demoperformanceapp:${{ github.sha }}

      # Deploy Bicep file Kubernetes service
      - name: Deploy Bicep file Kubernetes service
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Bicep/AKS/main.bicep
          parameters: name="${{ env.KUBERNETESSERVICENAME }}"
          failOnStdErr: false

      # Deploy Container registry image to Kubernetes services
      - name: Deploy Container registry image to Kubernetes service
        run: |
          # Get ACR credentials
          dockerServer=${{ env.CONTAINERREGISTRYNAMELOWER }}.azurecr.io
          dockerUsername=$(az acr credential show --name ${{ env.CONTAINERREGISTRYNAMELOWER }} --query username | tr -d '"')
          dockerPassword=$(az acr credential show --name ${{ env.CONTAINERREGISTRYNAMELOWER }} --query passwords[0].value | tr -d '"')
          dockerEmail=docker@localhost

          az aks get-credentials -n "${{ env.KUBERNETESSERVICENAME }}" -g  ${{ secrets.AZURE_RG }}

          # Setup Secret for registry credentials
          kubectl create secret docker-registry regcred \
              --docker-server=$dockerServer \
              --docker-username=$dockerUsername \
              --docker-password=$dockerPassword \
              --docker-email=$dockerEmail
          
          # az aks update -n "${{ env.KUBERNETESSERVICENAME }}" -g ${{ secrets.AZURE_RG }} --attach-acr "${{ env.CONTAINERREGISTRYNAMELOWER }}"
          
          kubectl apply -f deploy.yml
          kubectl get pods

      # Deploy Bicep file Azure Log Analytics
      - name: Deploy Bicep file Azure Log Analytics
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Bicep/ALA/main.bicep
          parameters: name="${{ env.AZURELOGANALYTICSWORKSPACENAME }}"  location="westeurope"
          failOnStdErr: false

      # Deploy Bicep file Azure Load Testing
      - name: Deploy Bicep file Azure Load Testing
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./Bicep/ALT/main.bicep
          parameters: name="${{ env.AZURELOADTESTINGNAME }}" location="northeurope"
          failOnStdErr: false

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: az version

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
